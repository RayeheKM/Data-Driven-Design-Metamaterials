function BendingStructure1 (bigMaterialArray, materials, mat_inf, targetFrequency, nmat, model, radius, nEle, directory, filename)
    
    poissonRatio = 0.35;
    density = 1;
    
    % Define the input file path
    NodesPath = [directory,'BendingStructure1_Nodes.txt'];
    ElementPath = [directory,'BendingStructure1_Elements.txt'];
    SetsPath = [directory,'BendingStructure1_Sets.txt'];

    % Open the input file for reading
    fid2 = fopen(NodesPath, 'r');
    fid3 = fopen(ElementPath, 'r');
    fid4 = fopen(SetsPath, 'r');

    fid1 = fopen([directory, filename,'.inp'],'w');
    fprintf(fid1,'%s\n', '*Heading');
    fprintf(fid1,'%s\n', '** Job name: delete_nodes_truncatedOctahedron Model name: Model-1');
    fprintf(fid1,'%s\n', '** Generated by: Abaqus/CAE 2025');
    fprintf(fid1,'%s\n', '*Preprint, echo=NO, model=NO, history=NO, contact=NO');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** PARTS ');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '*Part, name=Part-1 ');
    fprintf(fid1,'%s\n', '*End Part ');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** ASSEMBLY ');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '*Assembly, name=Assembly ');
    fprintf(fid1,'%s\n', '**   ');
    fprintf(fid1,'%s\n', '*Instance, name=Part-1-1, part=Part-1');
    fprintf(fid1,'%s\n', '*Node');
    
    % Read the nodes
    while ~feof(fid2)
        line = fgetl(fid2);  % Read a line from the input file
        if ischar(line)      % Check if the line was read successfully
            fprintf(fid1, '%s\n', line);  % Write the line to the output file
        end
    end

    if strcmp(model, '3DTruss')
        fprintf(fid1,'%s\n', '*Element, type=T2D2');
    elseif strcmp(model, '3DBeam')
        fprintf(fid1,'%s\n', '*Element, type=B21');
    end

    % Read the elements
    while ~feof(fid3)
        line = fgetl(fid3);  % Read a line from the input file
        if ischar(line)      % Check if the line was read successfully
            fprintf(fid1, '%s\n', line);  % Write the line to the output file
        end
    end

    % Read the element sets
    while ~feof(fid4)
        line = fgetl(fid4);  % Read a line from the input file
        if ischar(line)      % Check if the line was read successfully
            fprintf(fid1, '%s\n', line);  % Write the line to the output file
        end
    end

%%
    % Initialize a cell array to store locations for each unique material
    UniqueMaterials = unique(bigMaterialArray);
    
    
    if strcmp(model, '3DTruss')
        for i=1:nEle
            fprintf(fid1,'%s\n', ['** Section: Section-', num2str(i)]);
            fprintf(fid1,'%s\n', ['*Solid Section, elset=Set', num2str(i), ', material=Material-', num2str(bigMaterialArray(i))]);
            fprintf(fid1,'%s\n', [num2str((pi*radius^2)),',']);
        end
    elseif strcmp(model, '3DBeam')
        for i=1:nEle
            fprintf(fid1,'%s\n', ['** Section: Section-', num2str(i), '  Profile: Profile-1']);
            fprintf(fid1,'%s\n', ['*Beam Section, elset=Set', num2str(i), ', material=Material-', num2str(bigMaterialArray(i)), ', temperature=GRADIENTS, section=CIRC']);
            fprintf(fid1,'%s\n', [num2str(radius),',']);
            fprintf(fid1,'%s\n', '0.,0.,-1.');
        end
    end

    fprintf(fid1,'%s\n', '*End Instance');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-1, instance=Part-1-1');
    fprintf(fid1,'%s\n', '  1,  2,  6,  7, 29, 94');
    fprintf(fid1,'%s\n', '*Elset, elset=Set-1, instance=Part-1-1');
    fprintf(fid1,'%s\n', '   1,   6,  43,  89, 156');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-23, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 11,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-24, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 12,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-25, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 70,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-26, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 105,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-27, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 104,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-28, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 102,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-29, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 113,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-30, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 114,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-31, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 220,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-32, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 143,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-33, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 142,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-34, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 140,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-35, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 152,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-36, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 153,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-37, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 224,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-38, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 182,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-39, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 181,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-40, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 179,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-41, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 191,');
    fprintf(fid1,'%s\n', '*Nset, nset=Set-42, instance=PART-1-1');
    fprintf(fid1,'%s\n', ' 192,');
    fprintf(fid1,'%s\n', '*End Assembly');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** MATERIALS');
    fprintf(fid1,'%s\n', '** ');

    %Create materials
    for i=1:numel(UniqueMaterials)
        fprintf(fid1,'%s\n', ['*Material, name=MATERIAL-',num2str(UniqueMaterials(i))]);
        fprintf(fid1,'%s\n', '*Density');
        fprintf(fid1,'%s\n', [num2str(density),',']);

        MasterCurveData = materials(UniqueMaterials(i),:);
        materialNumber = mod(UniqueMaterials(i), nmat);
        if materialNumber == 0
            materialNumber = nmat;
        end

        [ViscoelasticTable, Young]=TabularViscoelastic(MasterCurveData(:,1), complex(MasterCurveData(:,2), MasterCurveData(:,3)), poissonRatio, mat_inf(materialNumber,:));

        %make a file to save the material data for the ones that are used in the code
        fprintf(fid1,'%s\n', '*Elastic, moduli=LONG TERM');
        fprintf(fid1,'%s\n', [num2str(Young),', ',num2str(poissonRatio)]);
        fprintf(fid1,'%s\n', '*Viscoelastic, frequency=TABULAR');

        [numRows, numCols] = size(ViscoelasticTable);
        formatSpec = repmat('%e, ', 1, numCols); % Use '%e' for scientific notation
        formatSpec = [formatSpec(1:end-2), '\n']; % Remove the last comma and add a newline

        for rowNumber = 1:numRows
            fprintf(fid1, formatSpec, ViscoelasticTable(rowNumber, :));
        end

    end

    fprintf(fid1,'%s\n', '** ----------------------------------------------------------------');
    fprintf(fid1,'%s\n', '**');
    fprintf(fid1,'%s\n', '** STEP: Step-1');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '*Step, name=Step-1, nlgeom=NO, perturbation');
    fprintf(fid1,'%s\n', '*Steady State Dynamics, direct, friction damping=NO');
    fprintf(fid1,'%s\n', [num2str(targetFrequency),', ', num2str(targetFrequency+1), ', 2,']);

    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** BOUNDARY CONDITIONS');
    fprintf(fid1,'%s\n', '** ');

    fprintf(fid1,'%s\n', '** Name: BC-1 Type: Displacement/Rotation');
    fprintf(fid1,'%s\n', '*Boundary, real');
    fprintf(fid1,'%s\n', 'Set-1, 1, 1');
    fprintf(fid1,'%s\n', 'Set-1, 2, ');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** LOADS');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** Name: Load-21   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-23, 2, -0.5');
    fprintf(fid1,'%s\n', '** Name: Load-22   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-24, 2, -1');
    fprintf(fid1,'%s\n', '** Name: Load-23   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-25, 2, -1.5');
    fprintf(fid1,'%s\n', '** Name: Load-24   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-26, 2, -2');
    fprintf(fid1,'%s\n', '** Name: Load-25   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-27, 2, -2.5');
    fprintf(fid1,'%s\n', '** Name: Load-26   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-28, 2, -3');
    fprintf(fid1,'%s\n', '** Name: Load-27   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-29, 2, -3.5');
    fprintf(fid1,'%s\n', '** Name: Load-28   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-30, 2, -4');
    fprintf(fid1,'%s\n', '** Name: Load-29   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-31, 2, -4.5');
    fprintf(fid1,'%s\n', '** Name: Load-30   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-32, 2, -5');
    fprintf(fid1,'%s\n', '** Name: Load-31   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-33, 2, -5.5');
    fprintf(fid1,'%s\n', '** Name: Load-32   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-34, 2, -6');
    fprintf(fid1,'%s\n', '** Name: Load-33   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-35, 2, -6.5');
    fprintf(fid1,'%s\n', '** Name: Load-34   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-36, 2, -7');
    fprintf(fid1,'%s\n', '** Name: Load-35   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-37, 2, -7.5');
    fprintf(fid1,'%s\n', '** Name: Load-36   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-38, 2, -8');
    fprintf(fid1,'%s\n', '** Name: Load-37   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-39, 2, -8.5');
    fprintf(fid1,'%s\n', '** Name: Load-38   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-40, 2, -9');
    fprintf(fid1,'%s\n', '** Name: Load-39   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-41, 2, -9.5');
    fprintf(fid1,'%s\n', '** Name: Load-40   Type: Concentrated force');
    fprintf(fid1,'%s\n', '*Cload, real');
    fprintf(fid1,'%s\n', 'Set-42, 2, -10');


    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** OUTPUT REQUESTS');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** FIELD OUTPUT: F-Output-1');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '*Output, field');
    fprintf(fid1,'%s\n', '*Node Output, variable=PRESELECT');
    fprintf(fid1,'%s\n', '*Element Output, directions=YES');
    fprintf(fid1,'%s\n', 'ELEDEN, ELEN, ENER, LE, S');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '** HISTORY OUTPUT: H-Output-1');
    fprintf(fid1,'%s\n', '** ');
    fprintf(fid1,'%s\n', '*Output, history');
    fprintf(fid1,'%s\n', '*Energy Output, variable=ALL');
    fprintf(fid1,'%s\n', '*End Step');

    fclose(fid1);
    fclose(fid2);
    fclose(fid3);
end